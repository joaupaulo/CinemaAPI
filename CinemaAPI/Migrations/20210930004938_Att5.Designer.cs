// <auto-generated />
using System;
using CinemaAPI.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CinemaAPI.Migrations
{
    [DbContext(typeof(CinemaContexto))]
    [Migration("20210930004938_Att5")]
    partial class Att5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CinemaAPI.Models.Bar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bebida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<string>("Combo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Doce")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobremesa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId")
                        .IsUnique();

                    b.ToTable("Bar");
                });

            modelBuilder.Entity("CinemaAPI.Models.Cinema", b =>
                {
                    b.Property<int>("CinemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CinemaNome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CinemaId");

                    b.ToTable("Cinema");
                });

            modelBuilder.Entity("CinemaAPI.Models.Filmes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Atores")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Avaliacao")
                        .HasColumnType("int");

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<string>("Duracao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sinopse")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.ToTable("Filmes");
                });

            modelBuilder.Entity("CinemaAPI.Models.Ingressos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<int>("ValorIntegral")
                        .HasColumnType("int");

                    b.Property<int>("ValorMeia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.ToTable("Ingressos");
                });

            modelBuilder.Entity("CinemaAPI.Models.Programacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FilmeHoje")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FilmeSemana")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.ToTable("Programacao");
                });

            modelBuilder.Entity("CinemaAPI.Models.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<string>("Lado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroPoltrona")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.ToTable("Sala");
                });

            modelBuilder.Entity("CinemaAPI.Models.Bar", b =>
                {
                    b.HasOne("CinemaAPI.Models.Cinema", "Cinema")
                        .WithOne("BarId")
                        .HasForeignKey("CinemaAPI.Models.Bar", "CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("CinemaAPI.Models.Filmes", b =>
                {
                    b.HasOne("CinemaAPI.Models.Cinema", "Cinema")
                        .WithMany("Filmes")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("CinemaAPI.Models.Ingressos", b =>
                {
                    b.HasOne("CinemaAPI.Models.Cinema", "Cinema")
                        .WithMany("Ingressos")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("CinemaAPI.Models.Programacao", b =>
                {
                    b.HasOne("CinemaAPI.Models.Cinema", "Cinema")
                        .WithMany("Programacao")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("CinemaAPI.Models.Sala", b =>
                {
                    b.HasOne("CinemaAPI.Models.Cinema", "Cinema")
                        .WithMany("Sala")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("CinemaAPI.Models.Cinema", b =>
                {
                    b.Navigation("BarId");

                    b.Navigation("Filmes");

                    b.Navigation("Ingressos");

                    b.Navigation("Programacao");

                    b.Navigation("Sala");
                });
#pragma warning restore 612, 618
        }
    }
}
